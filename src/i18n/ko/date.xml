<comments name="date">
  <comment id="title"><![CDATA[
	@fileOverview jindo.$Date() 객체의 생성자 및 메서드를 정의한 파일
	@name date.js
	@author NAVER Ajax Platform
  ]]></comment>
  <comment id="desc"><![CDATA[
	jindo.$Date() 객체는 Date 객체를 래핑(Wrapping)하여 날짜 및 시간을 처리하기 위한 확장 기능을 제공한다.
	
	@class jindo.$Date
	@keyword date, 데이트, 날짜
  ]]></comment>
  <comment id="constructor"><![CDATA[
	jindo.$Date() 객체를 생성한다. jindo.$Date() 객체를 생성할 때 파라미터 없이 생성하거나 ISO Date 포맷 또는 밀리 초 단위의 정수를 생성자의 인수로 입력할 수 있다. ISO Date 포맷 문자를 넣은 경우 $Date.utc 속성을 기반하여 날짜를 계산한다.
	
	@constructor
	@syntax
	@syntax sDate
	@syntax nDate
	@syntax oDate
	@param {String+} sDate Date 포맷의 문자열.
	@param {Number} nDate 밀리 초 단위의 TimeStamp 정수 값.
	@param {Date+} oDate Date 또는 jindo.$Date() 객체
	@syntax nYear, nMonth, nDate, nHour, nMinute, nSecond, nMiliSec
	@param {Numeric} nYear 정수 값(Number) 년
	@param {Numeric} nMonth 정수 값(Number) 월
	@param {Numeric} [nDate=1] 정수 값(Number) 일 
	@param {Numeric} [nHour=1] 정수 값(Number) 시 
	@param {Numeric} [nMinute=1] 정수 값(Number) 분 
	@param {Numeric} [nSecond=1] 정수 값(Number) 초
	@param {Numeric} [nMiliSec=1] 정수 값(Number) 밀리세컨드
	@remark 1.4.6 버전 이후부터 달(nMonth)까지만 넣어도 $Date 사용 가능 (빈 값은 1로 설정)
	@see jindo.$Date.utc
	@see jindo.$Date#format
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date Date - MDN Docs
	@see http://ko.wikipedia.org/wiki/ISO_8601 ISO 8601 - W3C
	@example
		$Date();
		$Date(milliseconds);
		$Date(dateString);

		//1.4.6 이후부터 사용 가능
		$Date(2010,6);//이라고 하면 $Date(2010,6,1,1,1,1,1); 와 같음.
  ]]></comment>
  <comment id="constructor_1"><![CDATA[
iso string일때
  ]]></comment>
  <comment id="constructor_2"><![CDATA[
하나의 숫지인 경우는 밀리 세켄드로 계산함.
  ]]></comment>
  <comment id="names"><![CDATA[
	names 속성은 jindo.$Date() 객체에서 사용하는 달, 요일, 오전/오후를 표시하는 문자열을 저장한다. s_ 를 접두어로 가지는 이름은 약어(abbreviation)이다.
	
	@property names
	@type Object
	@static
	@remark  <h5>달, 요일, 오전/오후 표시 문자열</h5>
		<table class="tbl_board">
			<caption class="hide">달, 요일, 오전/오후 표시 문자열</caption>
			<thead>
				<tr>
					<th scope="col" style="width:20%">구분</th>
					<th scope="col">문자열</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td class="txt bold">month</td>
					<td class="txt">January, Febrary, March, April, May, June, July, August, September, October, Novermber, December</td>
				</tr>
				<tr>
					<td class="txt bold">s_month</td>
					<td class="txt">Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec</td>
				</tr>
				<tr>
					<td class="txt bold">day</td>
					<td class="txt">Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday</td>
				</tr>
				<tr>
					<td class="txt bold">s_day</td>
					<td class="txt">Sun, Mon, Tue, Wed, Thu, Fri, Sat</td>
				</tr>
				<tr>
					<td class="txt bold">ampm</td>
					<td class="txt">AM, PM</td>
				</tr>
			</tbody>
		</table>
  ]]></comment>
  <comment id="utc"><![CDATA[
	utc 속성은 협정 세계시와 시차를 저장한다. 기본값은 클라이언트의 시간을 기준으로 한다.
	
	@property utc
	@type Number
	@static
	@see http://ko.wikipedia.org/wiki/UTC 협정 세계시간
	@example
		$Date.utc = -10; // 하와이 시간을 기준으로 한다.
  ]]></comment>
  <comment id="now"><![CDATA[
	now() 메서드는 현재 시간을 밀리 초(millisecond) 단위의 정수로 리턴한다.
	
	@method now
	@static
	@return {Numeric} 현재 시간을 밀리 초 단위의 정수로 나타낸 값.
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/now Date.now() - MDN Docs
	@example
		$Date().now(); //sample : 1304907432081
  ]]></comment>
  <comment id="name"><![CDATA[
	name() 메서드는 names 속성에 정의된 달, 요일, 오전/오후를 표시하는 문자열의 값을 가져온다.
	
	@method name
	@param {String+} vName names속성 이름(String).
	@return {Variant} names 속성 값
	@since 1.4.1
	@see jindo.$Date.names
	@example
	    $Date().name("ampm | day | month | s_day | s_month");
  ]]></comment>
  <comment id="name2"><![CDATA[
	name() 메서드는 names 속성에 정의된 달, 요일, 오전/오후를 표시하는 문자열의 값을 설정한다.
	
	@method name
	@syntax vName, aValue
	@syntax oNames
	@param {String+} vName names속성 이름(String)
	@param {Array+} aValue names속성에 설정할 값.
	@param {Hash+} oNames 하나 이상의 names속성과 값을 가지는 객체(Object) 또는 해시 객체(jindo.$H() 객체).
	@return {this} 값을 반영한 인스턴스 자신
	@since 1.4.1
	@see jindo.$Date.names
  ]]></comment>
  <comment id="parse"><![CDATA[
	parse() 메서드는 인수로 지정한 문자열을 파싱하여 jindo.$Date() 객체를 생성한다.
	
	@method parse
	@static
	@param {String+} sDate 날짜, 혹은 시간 형식을 가진 문자열
	@return {Object} Date 객체.
	@throws {jindo.$Except.INVALID_DATE} date가 정상적인 문자 포맷이 아닌 경우.
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date Date - MDN Docs
  ]]></comment>
  <comment id="value"><![CDATA[
	$value() 메서드는 jindo.$Date() 객체가 감싸고 있던 원본 Date 객체를 반환한다.
	
	@method $value
	@return {Object} 원본 Date 객체.
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date Date - MDN Docs
  ]]></comment>
  <comment id="format"><![CDATA[
	format() 메서드는 jindo.$Date() 객체가 저장하고 있는 시간을 파라미터로 지정한 형식 문자열(Format Specifier)에 맞추어 변환한다.
	
	@method format
	@param {String+} sFormat  형식 문자열
	@return {String} 시간을 형식 문자열에 맞추어 변환한 문자열.
	@remark 지원하는 형식 문자열은 PHP의 date() 함수와 동일하다.<br>
		<h5>날짜</h5>
		<table class="tbl_board">
			<caption class="hide">날짜</caption>
			<thead>
				<tr>
					<th scope="col" style="width:20%">문자</th>
					<th scope="col" style="width:40%">설명</th>
					<th scope="col">기타</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td class="txt bold">d</td>
					<td class="txt">두자리 날짜</td>
					<td class="txt">01 ~ 31</td>
				</tr>
				<tr>
					<td class="txt bold">j</td>
					<td class="txt">0 없는 날짜</td>
					<td class="txt">1 ~ 31</td>
				</tr>
				<tr>
					<td class="txt bold">l (소문자L)</td>
					<td class="txt">주의 전체 날짜</td>
					<td class="txt">$Date.names.day에 지정되는 날짜</td>
				</tr>
				<tr>
					<td class="txt bold">D</td>
					<td class="txt">요약된 날짜</td>
					<td class="txt">$Date.names.s_day에 지정된 날짜</td>
				</tr>
				<tr>
					<td class="txt bold">w</td>
					<td class="txt">그 주의 몇번째 일</td>
					<td class="txt">0(일) ~ 6(토)</td>
				</tr>
				<tr>
					<td class="txt bold">N</td>
					<td class="txt">ISO-8601 주의 몇번째 일</td>
					<td class="txt">1(월) ~ 7(일)</td>
				</tr>
				<tr>
					<td class="txt bold">S</td>
					<td class="txt">2글자, 서수형식의 표현(1st, 2nd)</td>
					<td class="txt">st, nd, rd, th</td>
				</tr>
				<tr>
					<td class="txt bold">z</td>
					<td class="txt">해당 년도의 몇번째 일(0부터)</td>
					<td class="txt">0 ~ 365</td>
				</tr>
			</tbody>
		</table>
		<h5>월</h5>
		<table class="tbl_board">
			<caption class="hide">월</caption>
			<thead>
				<tr>
					<th scope="col" style="width:20%">문자</th>
					<th scope="col" style="width:40%">설명</th>
					<th scope="col">기타</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td class="txt bold">m</td>
					<td class="txt">두자리 고정으로 월</td>
					<td class="txt">01 ~ 12</td>
				</tr>
				<tr>
					<td class="txt bold">n</td>
					<td class="txt">앞에 0제외 월</td>
					<td class="txt">1 ~ 12</td>
				</tr>
				<tr>
					<td class="txt bold">F</td>
					<td class="txt">월의 문자열 이름</td>
					<td class="txt">January ~ December</td>
				</tr>
				<tr>
					<td class="txt bold">M</td>
					<td class="txt">축약된 월의 문자열 이름</td>
					<td class="txt">Jan ~ Dec</td>
				</tr>
			</tbody>
		</table>
		<h5>년</h5>
		<table class="tbl_board">
			<caption class="hide">년</caption>
			<thead>
				<tr>
					<th scope="col" style="width:20%">문자</th>
					<th scope="col" style="width:40%">설명</th>
					<th scope="col">기타</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td class="txt bold">L</td>
					<td class="txt">윤년 여부</td>
					<td class="txt">true, false</td>
				</tr>
				<tr>
					<td class="txt bold">o</td>
					<td class="txt">4자리 연도</td>
					<td class="txt">2010</td>
				</tr>
				<tr>
					<td class="txt bold">Y</td>
					<td class="txt">o와 같음.</td>
					<td class="txt">2010</td>
				</tr>
				<tr>
					<td class="txt bold">y</td>
					<td class="txt">2자리 연도</td>
					<td class="txt">10</td>
				</tr>
			</tbody>
		</table>
		<h5>시</h5>
		<table class="tbl_board">
			<caption class="hide">시</caption>
			<thead>
				<tr>
					<th scope="col" style="width:20%">문자</th>
					<th scope="col" style="width:40%">설명</th>
					<th scope="col">기타</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td class="txt bold">a</td>
					<td class="txt">소문자 오전, 오후</td>
					<td class="txt">am,pm</td>
				</tr>
				<tr>
					<td class="txt bold">A</td>
					<td class="txt">대문자 오전,오후</td>
					<td class="txt">AM,PM</td>
				</tr>
				<tr>
					<td class="txt bold">g</td>
					<td class="txt">(12시간 주기)0없는 두자리 시간.</td>
					<td class="txt">1~12</td>
				</tr>
				<tr>
					<td class="txt bold">G</td>
					<td class="txt">(24시간 주기)0없는 두자리 시간.</td>
					<td class="txt">0~24</td>
				</tr>
				<tr>
					<td class="txt bold">h</td>
					<td class="txt">(12시간 주기)0있는 두자리 시간.</td>
					<td class="txt">01~12</td>
				</tr>
				<tr>
					<td class="txt bold">H</td>
					<td class="txt">(24시간 주기)0있는 두자리 시간.</td>
					<td class="txt">00~24</td>
				</tr>
				<tr>
					<td class="txt bold">i</td>
					<td class="txt">0포함 2자리 분.</td>
					<td class="txt">00~59</td>
				</tr>
				<tr>
					<td class="txt bold">s</td>
					<td class="txt">0포함 2자리 초</td>
					<td class="txt">00~59</td>
				</tr>
				<tr>
					<td class="txt bold">u</td>
					<td class="txt">microseconds</td>
					<td class="txt">654321</td>
				</tr>
			</tbody>
		</table>
		<h5>기타</h5>
		<table class="tbl_board">
			<caption class="hide">기타</caption>
			<thead>
				<tr>
					<th scope="col" style="width:20%">문자</th>
					<th scope="col" style="width:40%">설명</th>
					<th scope="col">기타</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td class="txt bold">U</td>
					<td class="txt">Unix Time(1970 00:00:00 GMT) </td>
					<td class="txt"></td>
				</tr>
			</tbody>
		</table>
	@see http://kr2.php.net/manual/en/function.date.php date() - php.net
	@example
		var oDate = $Date("Jun 17 2009 12:02:54");
		oDate.format("Y.m.d(D) A H:i"); => "2009.06.17(Wed) PM 12:02"
  ]]></comment>
  <comment id="time"><![CDATA[
	time() 메서드는 jindo.$Date() 객체가 가지고 있는 GMT(1970/01/01 00:00:00)를 기준으로 현재 시간까지 경과한 시간 값을 가져온다.
	
	@method time
	@return {Number} jindo.$Date() 객체가 저장하고 있는 밀리세컨드 단위의 timeStamp 값.
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/getTime Date.getTime() - MDN
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/setTime Date.setTime() - MDN
	@see http://ko.wikipedia.org/wiki/GMT GMT
	@example
		var oDate = new $Date(Date.now());
		oDate.time(); // sample : 1304908070435
  ]]></comment>
  <comment id="time2"><![CDATA[
	time() 메서드는 GMT(1970/01/01 00:00:00)를 기준으로 경과한 시간을 jindo.$Date() 객체에 설정한다.
	
	@method time
	@param {Numeric} nTimeStamp 밀리 초 단위의 정수 값.
	@return {this} GMT를 기준으로 파라미터에 지정한 시간만큼 경과한 시간을 설정한 인스턴스 자신
	@throws {jindo.$Except.INVALID_DATE} 파라미터나 숫자가 아닌 경우 예외상황 발생.
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/getTime Date.getTime() - MDN
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/setTime Date.setTime() - MDN
	@see http://ko.wikipedia.org/wiki/GMT GMT
  ]]></comment>
  <comment id="year"><![CDATA[
	year() 메서드는 jindo.$Date() 객체가 저장하고 있는 시각의 연도(year)를 가져온다.
	
	@method year
	@return {Number} jindo.$Date() 객체가 저장하고 있는 시각의 연도를 반환한다. 반환되는 연도 값의 형식은 4자리 정수이다.
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/getFullYear Date.getFullYear() - MDN
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/setFullYear Date.setFullYear() - MDN
	@example
		var oDate = new $Date(Date.now());
		oDate.year(); // sample : 2011
  ]]></comment>
  <comment id="year2"><![CDATA[
	year() 메서드는 jindo.$Date() 객체의 연도(year)를 지정한 값으로 설정한다.
	
	@method year
	@param {Numeric} nYear jindo.$Date() 객체에 설정할 연도(year). 연도 값의 형식은 4자리 정수로 지정한다.
	@return {this} 연도를 새로 설정한 인스턴스 자신
	@throws {jindo.$Except.INVALID_DATE} 파라미터나 숫자가 아닌 경우 예외상황 발생.
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/getFullYear Date.getFullYear() - MDN
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/setFullYear Date.setFullYear() - MDN
	@example
		var oDate = new $Date(Date.now());
		oDate.year(1984);
		oDate.year(); // 1984
  ]]></comment>
  <comment id="month"><![CDATA[
	month() 메서드는 jindo.$Date() 객체가 저장하고 있는 시각의 달(month)을 가져온다.
	
	@method month
	@return {Number} jindo.$Date() 객체가 저장하고 있는 시각의 달을 반환한다. 반환되는 달의 값은 0(1월)에서 11(12월)사이의 정수이다.
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/getMonth Date.getMonth() - MDN
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/setMonth Date.setMonth() - MDN
	@example
		var oDate = new $Date(Date.now());
		oDate.month(); // sample : 4 (5월)
  ]]></comment>
  <comment id="month2"><![CDATA[
	month() 메서드는 jindo.$Date() 객체의 달(month)을 지정한 값으로 설정한다.
	
	@method month
	@param {Numeric} nMon jindo.$Date() 객체에 설정할 달(month). 달의 값은 0(1월)에서 11(12월)사이의 정수로 지정한다.
	@return {this} 달을 새로 설정한 인스턴스 자신
	@throws {jindo.$Except.INVALID_DATE} 파라미터나 숫자가 아닌 경우 예외상황 발생.
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/getMonth Date.getMonth() - MDN
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/setMonth Date.setMonth() - MDN
	@example
		var oDate = new $Date(Date.now());
		oDate.month(1);
		oDate.month(); // 3 (4월)
  ]]></comment>
  <comment id="date"><![CDATA[
	date() 메서드는 jindo.$Date() 객체가 저장하고 있는 시각의 날짜(day of the month)를 가져온다.
	
	@method date
	@return {Number} jindo.$Date() 객체가 저장하고 있는 시각의 날짜를 반환한다. 반환되는 날짜의 값은 1에서 31 사이의 정수이다.
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/getDate Date.getDate() - MDN
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/setDate Date.setDate() - MDN
	@example
		var oDate = new $Date(Date.now());
		oDate.date(); // sample : 9 (9일)
  ]]></comment>
  <comment id="date2"><![CDATA[
	date() 메서드는 jindo.$Date() 객체의 날짜(day of the month)를 지정한 값으로 설정한다.
	
	@method date
	@param {Numeric} nDate jindo.$Date() 객체에 설정할 날짜(day of the month). 날짜의 값은 1에서 31 사이의 정수로 지정한다.
	@return {this} 날짜를 새로 설정한 인스턴스 자신
	@throws {jindo.$Except.INVALID_DATE} 파라미터나 숫자가 아닌 경우 예외상황 발생.
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/getDate Date.getDate() - MDN
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/setDate Date.setDate() - MDN
	@example
		var oDate = new $Date(Date.now());
		oDate.date(15);
		oDate.date(); // 15 (15일)
  ]]></comment>
  <comment id="day"><![CDATA[
	day() 메서드는 jindo.$Date() 객체가 지정하고 있는 시각의 요일(day of the week)를 가져온다.
	
	@method day
	@return {Number} jindo.$Date() 객체가 저장하고 있는 시각의 요일을 반환한다. 반환되는 요일의 값은 0(일요일)에서 6(토요일) 사이의 정수이다.
	@throws {jindo.$Except.INVALID_DATE} 파라미터나 숫자가 아닌 경우 예외상황 발생.
	@see jindo.$Date#Date
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/getDay Date.getDay() - MDN
	@example
		var oDate = new $Date(Date.now());
		oDate.date(); // sample : 9 (9일)
		oDate.day(); // sample : 1 (월요일)
		oDate.date(10);
		oDate.day(); // 2 (화요일)
  ]]></comment>
  <comment id="hours"><![CDATA[
	hours() 메서드는 jindo.$Date() 객체가 저장하고 있는 시각의 시간(hour)을 가져온다.
	
	@method hours
	@return {Number} jindo.$Date() 객체가 저장하고 있는 시각의 시간를 반환한다. 반환되는 시간의 값은 0에서 23 사이의 정수이다.
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/getHours Date.getHours() - MDN
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/setHours Date.setHours() - MDN
	@example
		var oDate = new $Date(Date.now());
		oDate.hours(); // sample : 11 (11시)
  ]]></comment>
  <comment id="hours2"><![CDATA[
	hours() 메서드는 jindo.$Date() 객체의 시간(hour)을 지정한 값으로 설정한다.
	
	@method hours
	@param {Numeric} nHour  jindo.$Date() 객체에 설정할 시간(hour). 시간의 값은 0에서 23 사이의 정수로 지정한다.
	@return {this} 시간을 새로 설정한 인스턴스 자신
	@throws {jindo.$Except.INVALID_DATE} 파라미터나 숫자가 아닌 경우 예외상황 발생.
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/getHours Date.getHours() - MDN
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/setHours Date.setHours() - MDN
	@example
		var oDate = new $Date(Date.now());
		oDate.hours(19);
		oDate.hours(); // 19 (19시)
  ]]></comment>
  <comment id="minutes"><![CDATA[
	minutes() 메서드는 jindo.$Date() 객체가 저장하고 있는 시각의 분(minute)을 가져온다.
	
	@method minutes
	@return {Number} jindo.$Date() 객체가 저장하고 있는 시각의 분을 반환한다. 반환되는 분의 값은 0에서 59 사이의 정수이다.
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/getMinutes Date.getMinutes() - MDN
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/setMinutes Date.setMinutes() - MDN
	@example
		var oDate = new $Date(Date.now());
		oDate.minutes(); // sample : 53 (53분)
  ]]></comment>
  <comment id="minutes2"><![CDATA[
	minutes() 메서드는 jindo.$Date() 객체의 분(minute)을 지정한 값으로 설정한다. 
	
	@method minutes
	@param {Numeric} nMin jindo.$Date() 객체에 설정할 분(minute). 분의 값은 0에서 59 사이의 정수로 지정한다.
	@return {this} 분을 새로 설정한 인스턴스 자신
	@throws {jindo.$Except.INVALID_DATE} 파라미터나 숫자가 아닌 경우 예외상황 발생.
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/getMinutes Date.getMinutes() - MDN
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/setMinutes Date.setMinutes() - MDN
	@example
		var oDate = new $Date(Date.now());
		oDate.minutes(0);
		oDate.minutes(); // 0 (0분)
  ]]></comment>
  <comment id="seconds"><![CDATA[
	seconds() 메서드는 jindo.$Date() 객체가 저장하고 있는 시각의 초(second)를 가져온다.
	
	@method seconds
	@return {Number} jindo.$Date() 객체가 저장하고 있는 시각의 초를 반환한다. 반환되는 초의 값은 0에서 59 사이의 정수이다.
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/getSeconds Date.getSeconds() - MDN
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/setSeconds Date.setSeconds() - MDN
	@example 
		var oDate = new $Date(Date.now());
		oDate.seconds(); // sample : 23 (23초)
  ]]></comment>
  <comment id="seconds2"><![CDATA[
	seconds() 메서드는 jindo.$Date() 객체의 초(second)를 지정한 값으로 설정한다.
	
	@method seconds
	@param {Numeric} nSec jindo.$Date() 객체에 설정할 초(second). 초의 값은 0에서 59 사이의 정수로 지정한다.
	@return {this} 초를 새로 설정한 인스턴스 자신
	@throws {jindo.$Except.INVALID_DATE} 파라미터나 숫자가 아닌 경우 예외상황 발생. 
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/getSeconds Date.getSeconds() - MDN
	@see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/setSeconds Date.setSeconds() - MDN
	@example 
		var oDate = new $Date(Date.now());
		oDate.seconds(0);
		oDate.seconds(); // 0 (0초)
  ]]></comment>
  <comment id="isLeapYear"><![CDATA[
	isLeapYear() 메서드는 jindo.$Date() 객체가 저장하고 있는 시각의 연도가 윤년인지 검사한다.
	
	@method isLeapYear
	@return {Boolean} $Date()가 저장하고 있는 시각의 연도가 윤년이면 true를 반환하고 평년이면 false를 반환한다.
	@see http://ko.wikipedia.org/wiki/%EC%9C%A4%EB%85%84 윤년 - Wikipedia
	@example
		var oDate = new $Date(Date.now());
		
		oDate.year(); // 2011
		oDate.isLeapYear(); // false
		
		oDate.year(1984);
		oDate.isLeapYear(); // true
		
		oDate.year(1900);
		oDate.isLeapYear(); // false
		
		oDate.year(2000);
		oDate.isLeapYear(); // true
  ]]></comment>
  <comment id="compare"><![CDATA[
	compare() 메서드는 인자로 받은 날짜와 차이를 숫자로 반환하는 함수이다.
	
	@method compare
	@param {Date+} oDate 비교할 날짜.
	@param {String+} [sOption=천 분의 1초까지 비교] 비교할 단위를 지정.
		@param {String+} sOption."y" 년
		@param {String+} sOption."m" 달
		@param {String+} sOption."d" 날
		@param {String+} sOption."h" 시
		@param {String+} sOption."i" 분
		@param {String+} sOption."s" 초
	@return {Number} 비교 단위를 기준으로 차이를 숫자로 반환한다.
	@since 2.0.0
	@example
		var oDate = new $Date(new Date());
		oDate.compare(oDate);-> 0//같은 경우
		var oCurrentDate = new Date();
		oDate.compare(oCurrnetDate); -> 3 // 3ms후
		$Date(oCurrnetDate).compare(oDate); -> -3 // 3ms 전
		oDate.compare(oCurrnetDate,"h"); -> 0 //시간은 같기 때문에 0
  ]]></comment>
</comments>
