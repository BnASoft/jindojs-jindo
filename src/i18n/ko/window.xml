<comments name="window">
  <comment id="title"><![CDATA[
	@fileOverview jindo.$Window() 객체의 생성자 및 메서드를 정의한 파일
	@name window.js
	@author NAVER Ajax Platform
  ]]></comment>
  <comment id="desc"><![CDATA[
	jindo.$Window() 객체는 브라우저가 제공하는 window 객체를 래핑하고, 이를 다루기 위한 여러가지 메서드를 제공한다.
	
	@class jindo.$Window
	@keyword window, 윈도우
	@filter desktop
  ]]></comment>
  <comment id="constructor"><![CDATA[
	jindo.$Window() 객체를 생성하고 생성한다.
	
	@constructor
	@param {Hash+} oWindow jindo.$Window() 객체로 래핑할 window 객체.
  ]]></comment>
  <comment id="sign_value"><![CDATA[
	$value() 메서드는 원본 window 객체를 반환한다.
	
	@method $value
	@return {jindo.$Window} window 객체.
	@example
		$Window().$value(); // 원래의 window 객체를 반환한다.
  ]]></comment>
  <comment id="resizeTo"><![CDATA[
	resizeTo() 메서드는 창의 크기를 지정한 크기로 변경한다. 지정한 크기는 프레임을 포함한 창 전체의 크기를 의미한다. 따라서 실제로 표현하는 콘텐츠 사이즈는 브라우저 종류와 설정에 따라 달라질 수 있다. 브라우저에 따라 보안 문제 때문에, 창 크기가 화면의 가시 영역보다 커지지 못하도록 막는 경우도 있다. 이 경우에는 지정한 크기보다 창이 작아질 수 있다. 단위는 픽셀(px) 단위이다.
	
	@method resizeTo
	@param {Numeric} nWidth 창의 너비.
	@param {Numeric} nHeight 창의 높이.
	@return {this} 창의 크기를 변경한 인스턴스 자신
	@see jindo.$Window#resizeBy
	@example
		// 현재 창의 너비를 400, 높이를 300으로 변경한다.
		$Window.resizeTo(400, 300);
  ]]></comment>
  <comment id="resizeBy"><![CDATA[
	resizeBy() 메서드는 창의 크기를 지정한 크기만큼 늘리거나 줄인다. 창의 크기를 늘릴 때는 양의 정수를 줄일 때는 음의 정수를 입력한다. 단위는 픽셀(px) 단위이다.
	
	@method resizeBy
	@param {Numeric} nWidth 늘이거나 줄일 창의 너비.
	@param {Numeric} nHeight 늘어날 줄일 창의 높이
	@return {this} 창의 크기를 변경한 인스턴스 자신
	@see jindo.$Window#resizeTo
	@example
		// 현재 창의 너비를 100, 높이를 50 만큼 늘린다.
		$Window().resizeBy(100, 50);
  ]]></comment>
  <comment id="moveTo"><![CDATA[
	moveTo() 메서드는 창을 지정한 위치로 이동시킨다. 좌표는 브라우저 프레임을 포함한 창의 왼쪽 위의 모서리를 기준으로 한다. 단위는 픽셀(px) 단위이다.
	
	@method moveTo
	@param {Numeric} nLeft 이동할 X 좌표.
	@param {Numeric} nTop 이동할 Y좌표.
	@return {this} 창의 위치를 변경한 인스턴스 자신
	@see jindo.$Window#moveBy
	@example
		// 현재 창을 (15, 10) 으로 이동시킨다.
		$Window().moveTo(15, 10);
  ]]></comment>
  <comment id="moveBy"><![CDATA[
	moveBy() 메서드는 창을 지정한 위치만큼 이동시킨다. 단위는 픽셀(px) 단위이다.
	
	@method moveBy
	@param {Numeric} nLeft 창을 좌우로 이동시킬 크기. 양의 정수를 입력하면 오른쪽으로 이동시키고 음의 정수를 입력하면 왼쪽으로 이동한다.
	@param {Numeric} nTop 창을 위아래로 이동시킬 크기. 양의 정수를 입력하면 아래로 이동시키고 음의 정수를 입력하면 위로 이동시킨다.
	@return {this} 창의 위치를 변경한 인스턴스 자신
	@see jindo.$Window#moveTo
	@example
		// 현재 창을 좌측으로 15px만큼, 아래로 10px만큼 이동시킨다.
		$Window().moveBy(15, 10);
  ]]></comment>
  <comment id="sizeToContent"><![CDATA[
	sizeToContent() 메서드는 내부 문서의 콘텐츠 크기에 맞추어 창의 크기를 변경한다.
	
	@method sizeToContent
	@param {Numeric} nWidth 창의 너비.
	@param {Numeric} nHeight 창의 높이.
	@return {this} 창의 크기를 변경한 인스턴스 자신
	@see jindo.$Document#renderingMode
	@remark 이때 몇 가지 제약 사항을 가진다.<br>
		<ul class="disc">
			<li>문서가 완전히 로딩된 다음에 메서드를 실행해야 한다.</li>
			<li>창이 내부 문서보다 큰 경우에는 내부 문서의 크기를 구할 수 없으므로, 반드시 창 크기를 내부 문서보다 작게 만든다.</li>
			<li>반드시 body 요소의 사이즈가 있어야 한다.</li>
			<li>HTML의 DOCTYPE이 Quirks일때 MAC 운영체제 환경에는 Opera 10 버전, Windows 운영체제 환경에서는 인터넷 익스플로러 6버전 이상, Opera 10 버전, Safari 4버전에서 정상 동작하지 않는다.</li>
			<li>가능하면 부모 창에서 실행시켜야 한다. 자식 창이 모니터 화면을 벗어나 가려진 경우, 인터넷 익스플로러에서는 가려진 영역을 콘텐츠가 없는 것으로 판단하여 가려진 영역만큼 줄인다.</li>
		</ul><br>
		위와 같은 제약 사항에 걸리는 경우 파라미터로 창의 사이즈를 직접 지정할 수 있다.
	@example
		// 새 창을 띄우고 자동으로 창 크기를 콘텐츠에 맞게 변경하는 함수
		function winopen(url) {
			try {
				win = window.open(url, "", "toolbar=0,location=0,status=0,menubar=0,scrollbars=0,resizable=0,width=250,height=300");
				win.moveTo(200, 100);
				win.focus();
			} catch(e){}
		
			setTimeout(function() {
				$Window(win).sizeToContent();
			}, 1000);
		}
		winopen('/samples/popup.html');
  ]]></comment>
</comments>
