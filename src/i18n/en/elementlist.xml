<comments name="elementlist">
  <comment id="title"><![CDATA[
	@fileOverview A file to define the constructors and methods of the jindo.$ElementList() object
	@name elementlist.js
	@author NAVER Ajax Platform
  ]]></comment>
  <comment id="desc"><![CDATA[
	The jindo.$ElementList() object provides features that can handle multiple DOM elements simultaneously. The jindo.$ElementList() object manages DOM elements as an array.
	
	@class jindo.$ElementList
	@keyword elementlist, element, list
  ]]></comment>
  <comment id="constructor"><![CDATA[
  	Creates the jindo.$ElementList() object. The followings are used when the jindo.$ElementList() object is created: the ID of DOM elements or the array that has the ID as an element, the CSS selector or the array that has the jindo.$Element() object as an element.
	
	@constructor
	@syntax
	@syntax  sIDorSelector
	@syntax  aList
	@param {String+} sIDorSelector The CSS selector or ID to search for the DOM element in a document.
	@param {Array+} aList The array that has the ID, element or jindo.$Element() object of the DOM element in a document.
	@example
		// Creates the ElementList of 'foo' and 'bar' elements.
		var woElList = $ElementList($('foo','bar'));
		
		// Creates $ElementList for all 'DIV' elements in the document.
		var woElList = $ElementList('DIV');
  ]]></comment>
  <comment id="get"><![CDATA[
	The get() method returns the element corresponding to the index specified among the internal element of the jindo.$ElementList() object.
	
	@method get
	@param {Numeric} nIndex The index of the element to be retrieved.<br>The index starts from 0.
	@return {jindo.$Element} The element of the specified index
  ]]></comment>
  <comment id="getFirst"><![CDATA[
	The getFirst() method returns the first element of the jindo.$ElementList() object. It behaves the same with the get() method that has 0 as its index value.
	
	@method getFirst
	@return {jindo.$Element} The first element of the jindo.$ElementList() object
	@see jindo.$ElementList#get
	@see jindo.$ElementList#getLast
  ]]></comment>
  <comment id="getLast"><![CDATA[
	The getFirst() method returns the last element of the jindo.$ElementList() object. It behaves the same with the get() method that has the last index number as its index value.
	
	@method getLast
	@return {jindo.$Element} The last element of the jindo.$ElementList() object
	@see jindo.$ElementList#get
	@see jindo.$ElementList#getFirst
  ]]></comment>
  <comment id="length"><![CDATA[
	The length() method returns the size of jindo.$ElementList() object by using the length() method of the jindo.$A() object.
	
	@method length
	@return {Number} Returns the array size (number) of the current jindo.$ElementList() object.
	
	@since 1.4.3
	@see jindo.$A#length
  ]]></comment>
  <comment id="length2"><![CDATA[
	The length() method adjusts the size of jindo.$ElementList() object by using the length() method of the jindo.$A() object.
	
	@method length
	@syntax nLen
	@param {Numeric} nLen The size of an array to be specified. When nLen is smaller than the array size of the existing jindo.$ElementList() object, remove the element after the nLen.
	
	@syntax nLen2, oValue
	@param {Numeric} nLen2 The size of an array to be specified. When nLen is larger than the array size of the existing jindo.$ElementList() object, fill the space of the added array with the oValue parameter value. When nLen is smaller than the array size of the existing jindo.$ElementList() object, remove the element after the nLen.
	@param {Variant} oValue An initial value to be used when adding new elements.
	
	@return {this} Internal array changed instance of itself.
	@since 1.4.3
	@see jindo.$A#length
  ]]></comment>
  <comment id="sign_value"><![CDATA[
	The $value() method returns the internal array.
	
	@method $value
	@return {Array} An array that has the jindo.$Element() object as an element
  ]]></comment>
  <comment id="show"><![CDATA[
	The show() method changes the display attribute in order to display HTML elements on the screen.
	
	@method show
	@param {String+} [sDisplay] The value to be set as the display attribute.<br>If the parameter is not specified, it is set to its default value. It is set to "inline" if no pre-defind value exists; set to block if an error occurs.
	@return {this} Display property value applied instance of itself.
	@remark The sDisplay parameter is available in version 1.4.5 and higher.
	@see http://www.w3.org/TR/2008/REC-CSS2-20080411/visuren.html#display-prop display Attributes - W3C CSS2 Specification
	@see jindo.$Element#show
	@see jindo.$Element#hide
	@see jindo.$ElementList#hide
	@example
		// Makes it visible on the screen.
		$ElementList("div").show();
		
		//Before
		<div style="display:none">Hello</div>
		<div style="display:none">Good Bye</div>
		
		//After
		<div style="display:block">Hello</div>
		<div style="display:block">Good Bye</div>
  ]]></comment>
  <comment id="show_1"><![CDATA[
When the value of sDisplay is abnormal in Internet Explorer, it is set to block.
  ]]></comment>
  <comment id="hide"><![CDATA[
	The hide() method changes the display attribute to none to make the HTML elements invisible.
	
	@method hide
	@return {this} Display property changed to 'none' instance of itself.
	@see http://www.w3.org/TR/2008/REC-CSS2-20080411/visuren.html#display-prop display Attributes - W3C CSS2 Specification
	@see jindo.$Element#show
	@see jindo.$ElementList#show
	@see jindo.$Element#hide
	@example
		// Makes it invisible on the screen.
		$ElementList("div").hide();
		
		//Before
		<div style="display:block">Hello</div>
		<div style="display:block">Good Bye</div>
		
		//After
		<div style="display:none">Hello</div>
		<div style="display:none">Good Bye</div>
  ]]></comment>
  <comment id="toggle"><![CDATA[
	The toggle() method changes the display attributes of HTML elements in order to display or hide the element on the screen. This method can toggle the displayability of the element.
	
	@method toggle
	@param {String+} [sDisplay] The value which will be set as the display attribute in order to display an element.<br>If the parameter is not specified, it is set to its default value. It is set to "inline" if no pre-defind value exists.
	@return {this} display 속성을 변경한 인스턴스 자신
	@remark In version 1.4.5 and higher, it is possible to configure the value of sDisplay attribute as the value of the display attribute to display the element.
	@see http://www.w3.org/TR/2008/REC-CSS2-20080411/visuren.html#display-prop display Attributes< - W3C CSS2 Specification
	@see jindo.$ElementList#show
	@see jindo.$ElementList#hide
	@see jindo.$Element#visible
	@example
		// Makes it visiable or invisible on the screen.
		$ElementList("div").toggle();
		
		//Before
		<div style="display:block">Hello</div>
		<div style="display:none">Good Bye</div>
		
		//After
		<div style="display:none">Hello</div>
		<div style="display:block">Good Bye</div>
  ]]></comment>
  <comment id="addClass"><![CDATA[
	The addClass() method adds classes in HTML elements.
	
	@method addClass
	@param {String+} sClass Class name to be added. A space is used to add multiple class names.
	@return {this} 지정한 클래스를 추가한 인스턴스 자신
	@see jindo.$Element#className
	@see jindo.$ElementList#className
	@see jindo.$Element#hasClass
	@see jindo.$Element#removeClass
	@see jindo.$ElementList#removeClass
	@see jindo.$Element#toggleClass
	@see jindo.$ElementList#toggleClass
	@example
		// Adds a class.
		$ElementList(".sample li.off").addClass("deselected");
		$ElementList(".sample li.on").addClass("selected highlight");
		
		//Before
		<ul class="sample">
			<li class="on">Example1</li>
			<li class="off">Example2</li>
			<li class="off">Example3</li>
			<li class="on">Example4</li>
		</ul>
		
		//After
		<ul class="sample">
			<li class="on selected highlight">Example1</li>
			<li class="off deselected">Example2</li>
			<li class="off deselected">Example3</li>
			<li class="on selected highlight">Example4</li>
		</ul>
  ]]></comment>
  <comment id="removeClass"><![CDATA[
	The removeClass() method removes specific classes from HTML elements.
	
	@method removeClass
	@param {String+} sClass Class name to be removed. A space is used to remove multiple class names.
	@return {this} 지정한 클래스를 제거한 인스턴스 자신
	@see jindo.$Element#className
	@see jindo.$ElementList#className
	@see jindo.$Element#hasClass
	@see jindo.$Element#addClass
	@see jindo.$ElementList#addClass
	@see jindo.$Element#toggleClass
	@see jindo.$ElementList#toggleClass
	@example
		// Removing a class.
		$ElementList(".sample li").removeClass("selected");
		
		//Before
		<ul class="sample">
			<li class="on selected">Example1</li>
			<li class="off">Example2</li>
			<li class="off">Example3</li>
			<li class="on selected">Example4</li>
		</ul>
		
		//After
		<ul class="sample">
			<li class="on">Example1</li>
			<li class="off">Example2</li>
			<li class="off">Example3</li>
			<li class="on">Example4</li>
		</ul>
	@example
		// Removes multiple classes.
		$ElementList(".sample li").removeClass("selected highlight deselected");
		
		//Before
		<ul class="sample">
			<li class="on selected highlight">Example1</li>
			<li class="off deselected">Example2</li>
			<li class="off deselected">Example3</li>
			<li class="on selected highlight">Example4</li>
		</ul>
		
		//After
		<ul class="sample">
			<li class="on">Example1</li>
			<li class="off">Example2</li>
			<li class="off">Example3</li>
			<li class="on">Example4</li>
		</ul>
  ]]></comment>
  <comment id="toggleClass"><![CDATA[
	The toggleClass() method removes a class if that class has already been applied to the HTML element, or adds a class if none are.<br>
	When only one parameter is entered, removes the class specified as a parameter if the class is being used. If the class is not used, adds the class. If two parameters are entered, removes the class that is being used and adds the other.
	
	@method toggleClass
	@param {String+} sClass Class name to be added or removed
	@param {String+} [sClass2] Class name to be added or removed
	@return {this} 지정한 클래스를 추가 혹은 제거한 인스턴스 자신
	@import core.$Element[hasClass,addClass,removeClass]
	@see jindo.$Element#className
	@see jindo.$ElementList#className
	@see jindo.$Element#hasClass
	@see jindo.$Element#addClass
	@see jindo.$ElementList#addClass
	@see jindo.$Element#removeClass
	@see jindo.$ElementList#removeClass
	@example
		// If one parameter exists
		$ElementList(".sample li").toggleClass("on");
		
		//Before
		<ul class="sample">
			<li>Example1</li>
			<li class="even on">Example2</li>
			<li>Example3</li>
			<li class="even on">Example4</li>
		</ul>
		
		//After
		<ul class="sample">
			<li class="on">Example1</li>
			<li class="even">Example2</li>
			<li class="on">Example3</li>
			<li class="even">Example4</li>
		</ul>
	@example
		// If there are two parameters
		$ElementList(".sample li").toggleClass("on", "off");
		
		//Before
		<ul class="sample">
			<li class="on">Example1</li>
			<li class="even off">Example2</li>
			<li class="on">Example3</li>
			<li class="even off">Example4</li>
		</ul>
		
		//After
		<ul class="sample">
			<li class="off">Example1</li>
			<li class="even on">Example2</li>
			<li class="off">Example3</li>
			<li class="even on">Example4</li>
		</ul>
  ]]></comment>
  <comment id="fireEvent"><![CDATA[
	The fireEvent() method generates an event to the HTML element. The type of the event to be generated and the attributes of the event object can be specified as a parameter.
	
	@method fireEvent
	@param {String+} sEvent Name of the event to generate. Omit on prefix.
	@param {Hash+} [oProps] Object where the attribute of the event object is specified. Attribute of the event to be generated can be set.
	@return {jindo.$ElementList} The jindo.$ElementList() object of the HTML element of which event has been generated
	@remark 
		<ul class="disc">
			<li>In version 1.4.1 and higher, the value of keyCode is configurable.</li>
			<li>For WebKit family browsers, the value of keyCode cannot be specified when generating a key event because the keyCode of an event object is read-only.</li>
		</ul>
	@example
		// Occurs a click event.
		$ElementList("div").fireEvent("click", {left : true, middle : false, right : false});
		
		// Occurs a mouseover event.
		$ElementList("div").fireEvent("mouseover", {screenX : 50, screenY : 50, clientX : 50, clientY : 50});
		
		// Occurs a keydown event.
		$ElementList("div").fireEvent("keydown", {keyCode : 13, alt : true, shift : false ,meta : false, ctrl : true});
  ]]></comment>
  <comment id="leave"><![CDATA[
	leave() 메서드는 HTML 요소를 자신의 부모 요소에서 제거한다. HTML 요소에 등록된 이벤트 핸들러, 그리고 그 요소의 모든 자식요소의 모든 이벤트 핸들러도 제거한다.
	
	@method leave
	@return {this} 부모 요소에서 제거된 인스턴스 자신
	@see jindo.$Element#empty
	@see jindo.$ElementList#empty
	@see jindo.$Element#remove
	@example
		// Removes from a parent element node.
		$ElementList(".sample li").leave();
		
		//Before
		<ul class="sample">
			<li>Example1</li>
			<li>Example2</li>
		</ul>
		
		//After : <li>Example1</li><li>Example2</li>를 래핑한 $ElementList가 반환된다
		<ul class="sample">
		
		</ul>
  ]]></comment>
  <comment id="empty_1"><![CDATA[
	empty() 메서드는 HTML 요소의 자식 요소와 그 자식 요소들에 등록된 모든 이벤트 핸들러까지 제거한다.
	
	@method empty
	@return {this} 자식 노드를 모두 제거한 인스턴스 자신
	@see jindo.$Element#leave
	@see jindo.$ElementList#leave
	@see jindo.$Element#remove
	@example
		// Removes all child nodes.
		$ElementList(".sample li").empty();
		
		//Before
		<ul class="sample">
			<li>Example1 <span>Child Node</span></li>
			<li>Example1 <span>Child Node</span></li>
		</ul>
		
		//After
		<ul class="sample">
			<li></li>
			<li></li>
		</ul>
  ]]></comment>
  <comment id="appear"><![CDATA[
	The appear() method makes HTML elements slowly appear (fade-in effect).
	
	@method appear
	@param {Numeric} [nDuration] The time it takes for HTML elements to appear completely in seconds.
	@param {Function} [fCallback] The callback function to be executed after the HTML element have completely appeared
	@return {this} Fade-in 효과를 적용한 인스턴스 자신
	@remark
		<ul class="disc">
			<li>As filter is used in Internet Explorer 6, the elements disappear if they have the position attribute. In this case, the HTML element must have no position attribute.</li>
			<li>For Webkit-based browsers (Safari version 5 or higher, Mobile Safari, Chrome, Mobile Webkit) and Opera version 10.60 and higher, the CSS3 transition attribute is used. Use java scripts in all other browsers.</li>
		</ul>
	@see http://www.w3.org/TR/css3-transitions/ CSS Transitions - W3C
	@see jindo.$Element#show
	@see jindo.$ElementList#show
	@see jindo.$Element#disappear
	@see jindo.$ElementList#disappear
	@example
		$Element("sample1").appear(5, function(){
			$ElementList(".sample2 li").appear(3);
		});
		
		//Before
		<div id="sample1" style="display: none;">
			<ul class="sample2">
				<li style="display: none;">Example1</li>
				<li style="display: none;">Example2</li>
			</ul>
		</div>
		
		//After(1): sample1 element appears.
		<div id="sample1" style="display: block;opacity: 1;">
			<ul class="sample2">
				<li class="selected" style="display: none;">Example1</li>
				<li class="selected" style="display: none;">Example2</li>
			</ul>
		</div>
		
		//After(2): elements of the  sample2 appear.
		<div id="sample1" style="display: block;opacity: 1;">
			<ul class="sample2">
				<li class="selected" style="display: block;opacity: 1;">Example1</li>
				<li class="selected" style="display: block;opacity: 1;">Example2</li>
			</ul>
		</div>
  ]]></comment>
  <comment id="disappear"><![CDATA[
	The disappear() method makes HTML elements slowly disappear (fade-out effect).
	
	@method disappear
	@param {Numeric} [nDuration] The time it takes for HTML elements to disappear completely in seconds.
	@param {Function} [fCallback] The callback function to be executed after the HTML element have completely disappeared.
	@return {this} Fade-out 효과를 적용한 인스턴스 자신
	@remark
		<ul class="disc">
			<li>If the HTML element has completely disappeared, the attribute of the element changes to "none."</li>
			<li>For Webkit-based browsers (Safari version 5 or higher, Mobile Safari, Chrome, Mobile Webkit) and Opera version 10.6 and higher, the CSS3 transition attribute is used. Use java scripts in all other browsers.</li>
		</ul>
	@see http://www.w3.org/TR/css3-transitions/ CSS Transitions - W3C
	@see jindo.$Element#hide
	@see jindo.$ElementList#hide
	@see jindo.$Element#appear
	@see jindo.$ElementList#appear
	@example
		$ElementList(".sample2 li").disappear(5, function(){
			$Element("sample1").disappear(3);
		});
		
		//Before
		<div id="sample1" style="display: none;">
			<ul class="sample2">
				<li style="display: none;">Example1</li>
				<li style="display: none;">Example2</li>
			</ul>
		</div>
		
		//After(1): elements of the sample2 disappear.
		<div id="sample1" style="display: block;opacity: 1;">
			<ul class="sample2">
				<li class="selected" style="display: none;opacity: 0;">Example1</li>
				<li class="selected" style="display: none;opacity: 0;">Example2</li>
			</ul>
		</div>
		
		//After(2): sample1 element disappears.
		<div id="sample1" style="display: none;opacity: 0;">
			<ul class="sample2">
				<li class="selected" style="display: none;opacity: 0;">Example1</li>
				<li class="selected" style="display: none;opacity: 0;">Example2</li>
			</ul>
		</div>
  ]]></comment>
  <comment id="disappear_1"><![CDATA[
Handled as below due to an Opera bug.
  ]]></comment>
  <comment id="className"><![CDATA[
	The className() configures the name of a class in HTML elements.
	
	@method className
	@param {String+} sClass The class name to be specified. To specify one or more classes, list the class names by separating them with a single space.
	@return {this} 지정한 클래스를 반영한 인스턴스 자신
	@throws {jindo.$Except.NOT_FOUND_ARGUMENT} The exception occurs when no parameters exist.
	@see jindo.$Element#hasClass
	@see jindo.$Element#addClass
	@see jindo.$ElementList#addClass
	@see jindo.$Element#removeClass
	@see jindo.$ElementList#removeClass
	@see jindo.$Element#toggleClass
	@see jindo.$ElementList#toggleClass
	@example
		// Configures class names in HTML elements described above.
		$ElementList(".sample li").className("highlight");
		
		//Before
		<style type="text/css">
		.sample .selected { color:#0077FF; }
		.sample .highlight { background:#C6E746; }
		</style>
		
		<ul class="sample">
			<li class="selected">Example1</li>
			<li class="selected">Example2</li>
		</ul>
		
		//After
		<ul class="sample">
			<li class="highlight">Example1</li>
			<li class="highlight">Example2</li>
		</ul>
	@example
		// HTML 요소에 여러개의 클래스 이름 설정
		$ElementList(".sample li").className("highlight selected");
		
		//Before
		<style type="text/css">
		.sample .selected { color:#0077FF; }
		.sample .highlight { background:#C6E746; }
		</style>
		
		<ul class="sample">
			<li class="list">Example1</li>
			<li class="list">Example2</li>
		</ul>
		
		//After
		<ul class="sample">
			<li class="highlight selected">Example1</li>
			<li class="highlight selected">Example2</li>
		</ul>
  ]]></comment>
  <comment id="width"><![CDATA[
	The width() method configures the width of HTML elements.
	
	@method width
	@param {Numeric} nWidth	The width value to be set in pixels.<br>The value of the parameter is numerics.
	@return {this} width 속성 값을 반영한 인스턴스 자신
	@remark Each browser calculates the size of the Box model in a different manner. For this reason, the value of the width attribute of CSS may be different from the value returned by the width() method.
	@see jindo.$Element#height
	@see jindo.$ElementList#height
	@example
		// Configures the width value in HTML Elements described above.
		$ElementList(".sample li").width(200);
		
		//Before
		<style type="text/css">
			.sample li { width:70px; padding:5px; margin:5px; background:red; }
		</style>
		
		<ul class="sample">
			<li class="list">Example1</li>
			<li class="list">Example2</li>
		</ul>
		
		//After
		<ul class="sample">
			<li class="list" style="width: 190px">Example1</li>
			<li class="list" style="width: 190px">Example2</li>
		</ul>
  ]]></comment>
  <comment id="height"><![CDATA[
	The height() method configures the real height of HTML elements.
	
	@method height
	@param {Number} nHeight The height value to be set in pixels.<br>The value of the parameter is numerics. If the parameter is omitted, returns the height value.
	@return {this} height 속성 값을 반영한 인스턴스 자신
	@remark Each browser calculates the size of the Box model in a different manner. For this reason, the value of the height attribute of CSS may be different from the value returned by the height method.
	@see jindo.$Element#width
	@see jindo.$ElementList#width
	@example
		// Configures the height value of HTML Elements described above.
		$ElementList("sample_div").height(100);
		
		//Before
		<style type="text/css">
			div { width:70px; height:50px; padding:5px; margin:5px; background:red; }
		</style>
		
		<ul class="sample">
			<li class="list">Example1</li>
			<li class="list">Example2</li>
		</ul>
		
		//After
		<ul class="sample">
			<li class="list" style="height: 90px">Example1</li>
			<li class="list" style="height: 90px">Example2</li>
		</ul>
  ]]></comment>
  <comment id="text"><![CDATA[
	The text() method configures the text node value of HTML elements.
	
	@method text
	@param {String+} sText Text to be specified
	@return {this} 지정한 값을 설정한 인스턴스 자신
	@example
		// Configures the text node value
		$ElementList(".sample li").text("New Example");
		
		//Before
		<ul class="sample">
			<li><span>Old Example1</span></li>
			<li><span>Old Example2</span></li>
		</ul>
		
		//After
		<ul class="sample">
			<li>New Example</li>
			<li>New Example</li>
		</ul>
  ]]></comment>
  <comment id="html"><![CDATA[
	The html() method configures the inner HTML code of HTML elements. 이때 모든 하위 요소의 모든 이벤트 핸들러를 제거한다.
	
	@method html
	@param {String+} sHTML The HTML character string to be set as the inner HTML code.
	@return {this} 지정한 값을 설정한 인스턴스 자신
	@remark When modifying the col of colgroup in Internet Explorer 8, delete and recreate the colgroup and then add col. 
	@see https://developer.mozilla.org/en/DOM/element.innerHTML element.innerHTML - MDN Docs
	@see jindo.$Element#outerHTML
	@example
		// Searches inner HTML values.
		$ElementList(".sample li").html("<p><em>New</em> Example</p>");
		
		//Before
		<ul class="sample">
			<li><em>Old</em> Example1</li>
			<li><em>Old</em> Example2</li>
		</ul>
		
		//After
		<ul class="sample">
			<li><p><em>New</em> Example</p></li>
			<li><p><em>New</em> Example</p></li>
		</ul>
  ]]></comment>
  <comment id="html_1"><![CDATA[
 * Fixes it so as to ensure that no problem exists even if setting innerHTML in Select tag or TABLE, TR, THEAD
 * and TBODY tag in some situations of IE or FireFox - hooriza
  ]]></comment>
  <comment id="html_2"><![CDATA[
* For the select tag in IE, if there is a selected option among the options,
* the options before it are all set to true if selected is in the middle;
* to solve this, use cloneNode and change selected after copying the option. - mixed
  ]]></comment>
  <comment id="css"><![CDATA[
	The css() method configures the CSS attributes of HTML elements.
	
	@method css
	@syntax vName, vValue
	@syntax oList
	@param {String+} vName The name (String) of the CSS attribute
	@param {String+ | Numeric} vValue The value to be configured in the CSS attribute.<br>Uses either numbers or character strings that include the unit.
	@param {Hash+} oList An object or hash object (jindo.$H() object) that has one or more CSS attributes and values.
	@return {this} CSS 속성 값을 반영한 인스턴스 자신
	@throws {jindo.$Except.NOT_USE_CSS} The exception occurs when the element cannot use css.
	@remark 
		<ul class="disc">
			<li>To execute the method, the CSS attribute uses Camel Notation. For example, the border-width-bottom attribute can be specified with borderWidthBottom.</li>
			<li>The css method uses cssFloat instead of float, because the float attribute is a reserved word in JavaScript. The method uses styleFloat in IE, and cssFloat in all other browsers.</li>
		</ul>
	@see jindo.$Element#attr
	@see jindo.$ElementList#attr
	@example
		// Configures the value of the CSS attribute.
		$ElementList('.sample li').css('backgroundColor', 'red');
		
		//Before
		<ul class="sample">
			<li class="highlight">Example1</li>
			<li class="highlight">Example2</li>
		</ul>
		
		//After
		<ul class="sample">
			<li class="highlight" style="background-color: red;">Example1</li>
			<li class="highlight" style="background-color: red;">Example2</li>
		</ul>
	@example
		// Configures multiple CSS attribute values.
		$ElementList('.sample li').css({
			width: "200px",		// 200
			height: "80px"  	// 80 으로 설정하여도 결과는 같음
		});
		
		//Before
		<ul class="sample">
			<li class="highlight" style="background-color: red;">Example1</li>
			<li class="highlight" style="background-color: red;">Example2</li>
		</ul>
		
		//After
		<ul class="sample">
			<li class="highlight" style="background-color: red; width: 200px; height: 80px;">Example1</li>
			<li class="highlight" style="background-color: red; width: 200px; height: 80px;">Example2</li>
		</ul>
  ]]></comment>
  <comment id="attr"><![CDATA[
	The attr() method configures the attribute of HTML elements.
	
	@method attr
	@syntax sName, vValue
	@syntax oList
	@param {String+} sName The name of the attribute (String)
	@param {Variant} vValue The value to be configured in the attribute. Uses either numbers or character strings that include the unit. If the configuration value is set to null, it deletes the HTML attribute.
	@param {Hash+} oList An object or hash object (jindo.$H() object) that has one or more attributes and values.
	@return {this} Property value applied instance of itself.
	@throws {jindo.$Except.NOT_USE_CSS} The exception occurs when sName is not characters, object, or $Hash.
	@remark 2.2.0 버전 부터 &lt;select&gt; 엘리먼트에 사용시, 옵션값을 설정할 수 있다.
	@see jindo.$Element#css
	@see jindo.$ElementList#css
	@example
		$ElementList(".sample a").attr("href", "http://www.hangame.com");
		
		//Before
		<div class="sample">
			<a href="http://www.naver.com" target="_blank">네이버</a>
			<a href="#">한게임</a>
		</div>
		
		//After
		<ul class="sample">
			<a href="http://www.hangame.com" target="_blank">네이버</a>
			<a href="http://www.hangame.com" target="_blank">한게임</a>
		</ul>
	@example
		$ElementList(".sample a").attr({
		    "href" : "http://www.hangame.com",
		    "target" : "_blank"
		});
		
		//Before
		<div class="sample">
			<a href="http://www.naver.com" target="_self">네이버</a>
			<a href="#">한게임</a>
		</div>
		
		//After
		<div class="sample">
			<a href="http://www.hangame.com" target="_blank">네이버</a>
			<a href="http://www.hangame.com" target="_blank">한게임</a>
		</div>
	@example
		<select class="sample">
			<option value="naver">네이버</option>
			<option value="hangame">한게임</option>
			<option>쥬니버</option>
		</select>
		<select class="sample">
			<option value="naver">네이버</option>
			<option value="hangame">한게임</option>
			<option>해피빈</option>
		</select>
		<script type="text/javascript">
			var wel = $ElementList(".sample");
			wel.attr("value", null); // null
			
			// 해당 셀렉트리스트에서 "hangame" 옵션 선택함
			wel.attr("value", "한게임");
			
			// 해당 셀렉트리스트에서 "쥬니버" 옵션 선택함
			// 해당 옵션이 없으면 선택한 옵션 없음(null)
			wel.attr("value", "쥬니버");
			
			// 해당 셀렉트리스트에서 "naver" 옵션 선택함
			wel.attr("value", "naver");
			
			// 해당 셀렉트리스트에서 "해피빈" 옵션 선택함
			// 해당 옵션이 없으면 선택한 옵션 없음(null)
			wel.attr("value", "해피빈");
			
			// multiple이 아닐 때 파라미터를 배열로 입력시 선택한 옵션 없음(null)
			wel.attr("value", ["hangame"]);
		</script>
	@example
		<select class="sample" multiple="true">
			<option value="naver">네이버</option>
			<option value="hangame">한게임</option>
			<option>쥬니버</option>
		</select>
		<select class="sample" multiple="true">
			<option value="naver">네이버</option>
			<option value="hangame">한게임</option>
			<option>해피빈</option>
		</select>
		<script type="text/javascript">
			var wel = $ElementList(".sample");
			
			// 해당 셀렉트리스트에서 각각 ["naver"], ["naver"] 옵션 선택함
			wel.attr("value", "naver");
			
			// 선택한 옵션 없음(null, null)
			wel.attr("value", null);
			
			// 해당 셀렉트리스트에서 ["hangame"], ["hangame"] 옵션 선택함
			wel.attr("value", ["한게임"]);
			
			// 선택한 옵션 없음(null, null)
			wel.attr("value", []);
			
			// 해당 셀렉트리스트에서 ["naver", "hangame"], ["naver", "hangame"] 옵션 선택함
			wel.attr("value", ["네이버", "hangame"]);
			
			// 해당 셀렉트리스트에서 ["쥬니버"], ["쥬니버"] 옵션 선택함
			wel.attr("value", ["쥬니버", "me2day"]);
			
			// 해당 셀렉트리스트에서 ["naver"], ["naver", "해피빈"] 옵션 선택함
			wel.attr("value", ["naver", "해피빈"]);
		</script>
  ]]></comment>
</comments>
