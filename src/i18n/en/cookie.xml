<comments name="cookie">
  <comment id="title"><![CDATA[
	@fileOverview A file to define the constructor and method of the jindo.$Cookie() object.
	@name cookie.js
	@author NAVER Ajax Platform
  ]]></comment>
  <comment id="desc"><![CDATA[
	jindo.$Cookie() 객체는 쿠키(Cookie)에 정보를 추가, 수정, 혹은 삭제하거나 쿠키의 값을 가져온다.
	
	@class jindo.$Cookie
	@keyword cookie
    ]]></comment>
  <comment id="constructor"><![CDATA[
	Creates a jindo.$Cookie() object.
	
	@constructor
	@param {Boolean} [bURIComponent=false] 값 인코드/디코드시 encodeURIComponent()/decodeURIComponent() 함수를 사용할지 여부.
		@param {Boolean} [bURIComponent.false] escape()/unescape() 함수를 사용
		@param {Boolean} bURIComponent.true encodeURIComponent()/decodeURIComponent() 함수를 사용
	@remark bURIComponent is available in version 2.3.0 and higher.
	@example
		var cookie = $Cookie();
		var cookie = $Cookie(true);
    ]]></comment>
  <comment id="keys"><![CDATA[
	The keys() method returns an array that has the cookie key as its element.
	
	@method keys
 	@return {Array} An array that has the cookie key as its element
	@see jindo.$Cookie#set
	@example
		var cookie = $Cookie();
		cookie.set("session_id1", "value1", 1);
		cookie.set("session_id2", "value2", 1);
		cookie.set("session_id3", "value3", 1);
		
		document.write (cookie.keys ());
		// Result: :
		// session_id1, session_id2, session_id3
  ]]></comment>
  <comment id="get"><![CDATA[
	The get() method gets a value corresponding to the cookie key. null is returns if no value exists.
	
	@method get
	@param {String+} sName Key name
	@return {String} Cookie value
	@see jindo.$Cookie#set
	@example
		var cookie = $Cookie();
		cookie.set("session_id1", "value1", 1);
		document.write (cookie.get ("session_id1"));
			
		// Result: :
		// value1
		
		document.write (cookie.get ("session_id0"));
		// Result: :
		// null
  ]]></comment>
  <comment id="set"><![CDATA[
	The set() method configures a cookie value. An expiration period, valid domain, and path can also be configured.

	@method set
	@param {String+} sName Key name
	@param {String+} sValue Key value
	@param {Numeric} [nDays=0] Expiration period. The expiration period is specified by day. If this value is not specified or 0, cookies are automatically deleted when closing web browsers.
	@param {String+} [sDomain] Cookie domain
	@param {String+} [sPath] Cookie path
	@return {this} 값을 설정한 인스턴스 자신
	@see jindo.$Cookie#set
	@example
		var cookie = $Cookie();
		cookie.set("session_id1", "value1", 1);
		cookie.set("session_id2", "value2", 1);
		cookie.set("session_id3", "value3", 1);
  ]]></comment>
  <comment id="remove"><![CDATA[
	The remove() method removes cookie values configured in the cookie. If the valid domain and path are specified in a value to remove, correct value must be specified.
	
	@method remove
	@param {String+} sName Key name
	@param {String+} [sDomain] The valid domain specified
	@param {String+} [sPath] The valid path specified
	@return {this} 값을 제거한 인스턴스 자신
	@see jindo.$Cookie#get
	@see jindo.$Cookie#set
	@example
		var cookie = $Cookie();
		cookie.set("session_id1", "value1", 1);
		document.write (cookie.get ("session_id1"));
		
		// Result :
		// value1
		
		cookie.remove("session_id1");
		document.write (cookie.get ("session_id1"));
		
		// Result :
		// null
  ]]></comment>
</comments>
